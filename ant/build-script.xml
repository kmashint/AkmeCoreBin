<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE project [
	<!ENTITY echoInfo '<echo id="echoInfo" level="info" description="Reusable echo Task for scripting.  Not thread-safe."/>'>
	<!ENTITY echoWarning '<echo id="echoWarning" level="warning" description="Reusable echo Task for scripting.  Not thread-safe."/>'>
	<!ENTITY echoError '<echo id="echoError" level="error" description="Reusable echo Task for scripting.  Not thread-safe."/>'>
]>
<project name="build-script" basedir="." default="main">
	
	<!--
		Ant for data ETL (extraction, transformation, loading).
		Ant works very well for scheduled jobs, controlling other utilities.
		It can even <parallel/> process.
		It just needs to be called by a scheduler (cron, Windows Scheduler, SQL Server Agent).
		
		Could run javascript or groovy task within Ant to transform data.
		Could exec gawk/AWK command-line from Ant to transform data, or jawk to run AWK script in JVM.
		AWK is likely much faster since scripting uses reflection, and gawk seems faster than jawk.
		Could include awk.exe/gawk.exe in ant-1.6.5/bin/ or ant-1.8.4/bin/.
		gawk is faster on Windows via cmd /s /c "gawk ... input.txt >output.txt", possibly due to better I/O redirection.
	-->
	
	<!-- 
		Recommend javascript or groovy or ruby, maybe beanshell.
		Javascript cannot echo directly but can project.createTask("echo"); or project.getReference("echoId");
		Javascript is easy, well-known, and Mozilla Rhino is highly performant.
		Put scripts in their own files for syntax highlighting.
		Add bsf.jar and js.jar and other libraries to the ant-1.6.5/lib/ directory.
		Ant 1.7 supports Java 6 Scripting.
	-->
	&echoInfo;
	&echoWarning;
	&echoError;

	<!-- 
		awk -v var=val -f program.awk input.txt >output.txt
		The cmd /s /c " ... " preserves the line inside the quotes closest to not using cmd. 
		-->
	<property name="gawk" value="c:\util\gawk" />
	<property name="cmd" value="cmd" />
	<property name="cmd-begin" value='/s /c "' />
	<property name="cmd-end" value='"' />
	<property name="null-file" value="nul:" />

	<scriptdef name="myscript" language="javascript" src="build-script.js">
	    <attribute name="attr1"/>
	    <attribute name="attr2"/>
	</scriptdef>
	
	<script language="javascript"><![CDATA[
	function noop() {};
	project.addBuildListener(new org.apache.tools.ant.BuildListener() {
		buildFinished: function(ev) {
			project.executeTarget("proj.end");
		},
		buildStarted: noop,
		messageLogged: noop,
		targetStarted: noop,
		targetFinished: noop,
		taskStarted: noop,
		taskFinished: noop
	});
	]]></script>
	
	<target name="proj.begin">
	</target>
	<target name="proj.end" depends="proj.begin">
	</target>
	
	<target name="main">
		<myscript attr1="test1" attr2="test2">
		</myscript>
	</target>
	
	<target name="gawk" description="run external awk program via cmd for best speed">
		<exec executable="${cmd}" failonerror="true" logerror="true">
			<arg line='${cmd-begin} ${gawk} -W posix -f build-script.awk build-data-big.txt >build-data.txt.txt ${cmd-end}'/>
		</exec>
	</target>
	
	<target name="gawk-direct" description="run external awk program without cmd but has slow I/O redirection">
		<exec executable="${gawk}" failonerror="true" logerror="true">
			<redirector input="${null-file}" output="build-data.txt.txt" 
				append="false" logerror="true"   
				inputencoding="iso-8859-1" outputencoding="iso-8859-1" />
			<arg line="-W posix -f build-script.awk build-data-big.txt"/>
		</exec>
	</target>
	
	<!-- Is java fork="false" thread-safe if using input/output?  Perhaps not ... -->
	<target name="jawk" description="run internal jawk program">
		<java classname="org.jawk.Awk" classpath=".;${java.class.path}" fork="false" failonerror="true"> 
			<redirector input="${null-file}" output="build-data.txt.txt" 
				append="false" logerror="true"   
				inputencoding="iso-8859-1" outputencoding="iso-8859-1" />
			<arg line="-Z -f build-script.awk build-data-big.txt"/>
		</java>
	</target>

	<target name="gawk-parallel">
		<parallel threadcount="2" failonany="true" description="attempt parallel gawk the will be safe as different exec processes" >
			<exec executable="${cmd}" failonerror="true" logerror="true">
				<arg line='${cmd-begin} ${gawk} -W posix -f build-script.awk build-data-big.txt >build-data.txt1.txt ${cmd-end}'/>
			</exec>
			<exec executable="${cmd}" failonerror="true" logerror="true">
				<arg line='${cmd-begin} ${gawk} -W posix -f build-script.awk build-data-big.txt >build-data.txt2.txt ${cmd-end}'/>
			</exec>
		</parallel>
	</target>

	<target name="jawk-parallel">
		<parallel threadcount="2" failonany="true" description="attempt parallel jawk with fork='false' to test thread-safety" > 
			<java classname="org.jawk.Awk" fork="false" failonerror="true">
				<redirector input="${null-file}" output="build-data.txt1.txt" 
					append="false" logerror="true" 
					inputencoding="iso-8859-1" outputencoding="iso-8859-1" />
				<arg line="-f build-script.awk build-data-big.txt"/>
			</java>
			<java classname="org.jawk.Awk" fork="false" failonerror="true">
				<redirector input="${null-file}" output="build-data.txt2.txt" 
					append="false" logerror="true"
					inputencoding="iso-8859-1" outputencoding="iso-8859-1" />
				<arg line="-f build-script.awk build-data-big.txt"/>
			</java>
		</parallel>
	</target>

</project>
